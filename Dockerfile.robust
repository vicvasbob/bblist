FROM node:20-alpine

# Install comprehensive system dependencies including networking tools
RUN apk add --no-cache \
    openssl \
    git \
    curl \
    wget \
    bind-tools \
    ca-certificates \
    && update-ca-certificates

# Set working directory
WORKDIR /app

# Copy npm configuration
COPY .npmrc ./

# Copy package files first for better Docker layer caching
COPY package*.json ./
COPY prisma ./prisma

# Install dependencies with comprehensive error handling and multiple registries
RUN echo "=== DEPENDENCY INSTALLATION ===" && \
    echo "Node version: $(node --version)" && \
    echo "NPM version: $(npm --version)" && \
    echo "Testing connectivity..." && \
    (curl -s --max-time 10 https://registry.npmjs.org/ > /dev/null && echo "✅ npm registry reachable") || echo "❌ npm registry not reachable" && \
    echo "Configuring npm for robust installation..." && \
    npm config set registry https://registry.npmjs.org/ && \
    npm config list && \
    echo "Starting installation (attempt 1/3)..." && \
    (npm ci --include=dev && echo "✅ npm ci succeeded") || \
    (echo "⚠️  npm ci failed, trying npm install..." && \
     npm install --include=dev && echo "✅ npm install succeeded") || \
    (echo "⚠️  npm install failed, trying with alternative registry..." && \
     npm config set registry https://registry.npm.taobao.org/ && \
     npm install --include=dev && echo "✅ Alternative registry succeeded") || \
    (echo "⚠️  Alternative registry failed, trying final attempt..." && \
     npm config set registry https://registry.npmjs.org/ && \
     npm install --include=dev --force && echo "✅ Force install succeeded") || \
    (echo "❌ All installation attempts failed" && exit 1) && \
    echo "Verifying critical dependencies..." && \
    npm list --depth=0 && \
    npm list tailwindcss && \
    npm list next && \
    npm list react && \
    echo "✅ Dependencies verification complete"

# Copy source code
COPY . .

# Generate Prisma client with error checking
RUN echo "=== PRISMA CLIENT GENERATION ===" && \
    npx prisma generate && \
    echo "✅ Prisma client generated successfully"

# Try to build Next.js application with comprehensive error handling
RUN echo "=== NEXT.JS BUILD ATTEMPT ===" && \
    (NODE_ENV=production npm run build && \
     echo "✅ Build completed successfully during image creation!" && \
     ls -la .next/ && \
     echo "BUILD_ID: $(cat .next/BUILD_ID 2>/dev/null || echo 'Not found')") || \
    (echo "⚠️  Build failed during image creation - will retry at runtime" && \
     echo "Build logs above should show the specific error")

# Expose port
EXPOSE 3000

# Default command for production
CMD ["npm", "start"]