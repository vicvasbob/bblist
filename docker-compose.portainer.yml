version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: babylist-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: babylist
      POSTGRES_USER: babyuser
      POSTGRES_PASSWORD: babypass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U babyuser -d babylist"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: 
      context: .
      args:
        - BUILDKIT_INLINE_CACHE=0
      no_cache: true
    container_name: babylist-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://babyuser:babypass@postgres:5432/babylist}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://TU-DOMINIO}
      GOOGLE_GEMINI_API_KEY: ${GOOGLE_GEMINI_API_KEY:-}
      NODE_ENV: production
    ports:
      - "3000:3000"
    restart: unless-stopped
    command: |
      sh -c "
        echo '=== BABYLIST CONTAINER STARTING ===' &&
        echo 'Node version:' && node --version &&
        echo 'NPM version:' && npm --version &&
        echo 'Working directory contents:' && ls -la &&
        echo 'Checking if .next directory exists...' &&
        if [ -d .next ]; then
          echo '‚úÖ .next directory found!' &&
          ls -la .next/ &&
          if [ -f .next/BUILD_ID ]; then
            echo '‚úÖ BUILD_ID found:' && cat .next/BUILD_ID
          else
            echo '‚ùå BUILD_ID missing, build incomplete'
          fi
        else
          echo '‚ùå .next directory not found - build failed during image creation'
        fi &&
        echo 'Ensuring build exists...' &&
        if [ ! -f .next/BUILD_ID ]; then
          echo 'üîÑ No valid build found, running build now...' &&
          echo 'üì° Testing npm connectivity...' &&
          npm config set fetch-timeout 300000 &&
          npm config set fetch-retries 5 &&
          echo 'Installing any missing dependencies (including dev deps)...' &&
          (npm install || 
           (echo 'Retrying with different registry...' && 
            npm config set registry https://registry.npm.taobao.org/ && 
            npm install) ||
           (echo 'Final attempt with force install...' && 
            npm config set registry https://registry.npmjs.org/ && 
            npm install --force)) &&
          echo 'Generating Prisma client...' &&
          npx prisma generate &&
          echo 'Building Next.js application...' &&
          NODE_ENV=production npm run build &&
          echo '‚úÖ Runtime build completed successfully!' &&
          ls -la .next/
        else
          echo '‚úÖ Valid build found, skipping build step'
        fi &&
        echo 'üóÉÔ∏è  Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'üöÄ Starting production server...' &&
        npm start
      "

volumes:
  postgres_data:
    driver: local
