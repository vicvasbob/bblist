version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: babylist-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: babylist
      POSTGRES_USER: babyuser
      POSTGRES_PASSWORD: babypass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U babyuser -d babylist"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: 
      context: .
      no_cache: true
    container_name: babylist-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://babyuser:babypass@postgres:5432/babylist}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://TU-DOMINIO}
      GOOGLE_GEMINI_API_KEY: ${GOOGLE_GEMINI_API_KEY:-}
      NODE_ENV: production
    ports:
      - "3000:3000"
    restart: unless-stopped
    command: >
      sh -c "
        echo '=== BABYLIST SIMPLE STARTUP ===' &&
        echo 'Node: $(node --version)' &&
        echo 'NPM: $(npm --version)' &&
        echo 'Checking build status...' &&
        if [ ! -f .next/BUILD_ID ]; then
          echo '� No build found, running build script...' &&
          sh /app/simple-build.sh
        else
          echo '✅ Build exists, skipping build step'
        fi &&
        echo '🗃️ Running database migrations...' &&
        npx prisma migrate deploy &&
        echo '🚀 Starting production server...' &&
        npm start
      "

volumes:
  postgres_data:
    driver: local
