version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: babylist-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-babylist}
      POSTGRES_USER: ${POSTGRES_USER:-babyuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-babypass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U babyuser -d babylist"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    image: node:20-alpine
    container_name: babylist-app
    restart: unless-stopped
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://babyuser:babypass@postgres:5432/babylist}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3000}
      GOOGLE_GEMINI_API_KEY: ${GOOGLE_GEMINI_API_KEY:-}
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    command: |
      sh -c "
        echo 'Installing system dependencies...' &&
        apk add --no-cache git openssh openssl &&
        echo 'Cloning and building application...' &&
        rm -rf /app && mkdir -p /app &&
        git clone https://github.com/vicvasbob/bblist.git /app &&
        cd /app &&
        npm ci &&
        npx prisma generate &&
        npx prisma migrate deploy &&
        npm run build &&
        npm prune --production &&
        npm start
      "

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge